---
- name: Create a load blance using HAproxy
  hosts: lb_and_ha
  vars:
    # 负载均衡对外提供服务的端口
    service_bind_port: "{{ k8s.control_plane_port }}"
    # 后端服务器使用的端口, 是给下面转换的过滤器使用的, haproxy.cfg.j2 模板没有使用该变量
    backend_server_port: "{{ k8s.apiserver_bind_port }}"
    # 转换成形如: ['192.168.3.151:6443', '192.168.3.152:6443', '192.168.3.153:6443'] 的列表
    backend_servers: "{{ ansible_play_hosts_all | map('regex_replace', '^(.*)$',  '\\1:' + backend_server_port) | list }}"
    # 或者采用如下的方式, 手动设置, 这样 backend_servers 可以由集群外的主机来担任
    # backend_servers:
    #   # - "<ip>:<port>"
    #   - "192.168.3.151:6443"
    #   - "192.168.3.152:6443"
    #   - "192.168.3.153:6443"

    # 是否开启 haproxy stats 页面
    ha_stats_enable: True
    # haproxy stats 页面的服务端口
    ha_stats_port: 1936
    # haproxy stats 页面的 url
    ha_stats_url: /haproxy_stats
    # haproxy stats 页面的访问的用户名
    ha_stats_user: admin
    # haproxy stats 页面的访问的密码
    ha_stats_pwd: showmethemoney
    container_name: k8s_api_servers_haproxy
  tasks:
    - name: check parameters
      fail:
        msg: "Please setup backend_servers parameter"
      when: backend_servers == None or (backend_servers|count) == 0 or backend_servers[0] == '' or  backend_servers[0] == '<ip>:<port>'

      # 进行主机的基础设置
    - import_role:
        name: basic_setup

    - name: pip install docker (python package)
      pip:
        executable: /usr/bin/pip3
        name: docker
        state: present
    
    - name: mkdir -p /opt/haproxy
      file:
        path: /opt/haproxy
        state: directory

    - name: get container info
      docker_container_info:
        name: "{{ container_name }}"
      register: ha_container

    - name: setup HAproxy configuration
      template:
        backup: True
        src: haproxy.cfg.j2
        dest: /opt/haproxy/haproxy.cfg
        mode: u=rw,g=r,o=r
      notify: restart HAproxy container

    - name: create HAproxy container
      docker_container:
        detach: yes
        image: haproxy:alpine
        name: "{{ container_name }}"
        volumes:
          - "/opt/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg"
        network_mode: bridge
        ports:
          - "{{ service_bind_port }}:{{ service_bind_port }}"
          - "{{ ha_stats_port }}:{{ ha_stats_port }}"
        restart_policy: always
        state: started

  handlers:
    - name: restart HAproxy container
      service:
        name: haproxy
        state: restarted
      when: ha_container.exists