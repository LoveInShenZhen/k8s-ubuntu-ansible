---
# tasks file for k8s_node

# 加载共有变量
- import_role:
    name: common

# 对目标主机进行基础设置
- import_role:
    name: basic_setup

# k8s 需要主机关闭交换分区
- name: gathering swap state
  swap_state:

- name: disable swapoff now
  shell: swapoff -a
  when: host_swap_on == True
      
- name: disable swapoff permanently
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes

- name: add docker-ce GPG key
  apt_key:
    url: "{{ apt.docker.apt_key_url }}"
    state: present

- name: add docker-ce APT repository
  apt_repository:
    repo: "deb [arch=amd64] {{ apt.docker.apt_repository }} {{ ansible_lsb.codename }} stable"

- name: add k8s GPG key
  apt_key:
    url: "{{ apt.k8s.apt_key_url }}"
    state: present

- name: add k8s APT repository
  apt_repository:
    repo: "deb {{ apt.k8s.apt_repository }} kubernetes-xenial main"

- name: check if docker installed
  stat:
    path: /usr/bin/docker
  register: check_docker

- name: check if kubelet installed
  stat:
    path: /usr/bin/kubelet
  register: check_kubelet

- name: update apt cache
  apt:
    update_cache: yes
  when: check_docker.stat.exists == False or check_kubelet.stat.exists == False

- name: install docker-ce pkg
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io

- name: setup /etc/docker/daemon.json
  json_patch:
    src: "/etc/docker/daemon.json"
    create: yes
    create_type: object
    pretty: yes
    operations:
      - op: add
        path: "/registry-mirrors"
        value: ["https://dockerhub.azk8s.cn"]
      - op: add
        path: "/exec-opts"
        value: ["native.cgroupdriver=systemd"]
  notify: restart docker service

- name: setup /etc/sysctl.d/k8s.conf
  copy:
    src: sysctl.d.k8s.conf
    dest: /etc/sysctl.d/k8s.conf
  notify: load /etc/sysctl.d/k8s.conf

- name: install k8s pkgs
  apt:
    pkg:
      - kubelet 
      - kubeadm 
      - kubectl

- name: set domain name of control-plane-endpoint to ip address of the first_master
  hosts_file:
    ip: "{{ first_master }}"
    host: "{{ k8s.control_plane_dns }}"
    state: replace
